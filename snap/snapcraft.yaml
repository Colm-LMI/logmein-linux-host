name: logmein-host
version: '1.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: The LogMeIn Host Software (Beta) for Linux # 79 char long summary
icon: snap/gui/icon.png
base: core18
description: |-
 LogMeIn allows you to access your computers from any device.

 You can connect to a Linux host, in an web-based secure shell and it allows you to send commands to the host computer.

 For more information on LogMeIn for Linux and how to attach your host to your account, try the developer website.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

parts:
  pytty:
    plugin: python
    source: .
    requirements: [ requirements.txt ]
    stage-packages: [ openssh-client ]
  reverse-proxy:
    source: reverse-proxy/
    plugin: nodejs
    nodejs-package-manager: npm
    build-packages: [ gcc, g++, make, python ]
  novnc:
    plugin: dump
    source: https://github.com/novnc/noVNC/archive/v1.1.0.tar.gz
    organize:
      '*': noVNC/
  novnc-branding:
    plugin: dump
    source: ./remctrl/noVNC-branding
    organize:
      '*': noVNC-branding/
  websockify:
    plugin: nil
    stage-packages: 
      - websockify
      - python3-websockify
      - python3-setuptools
      - python3-numpy
      - python3-openssl
      - openssl 
      - net-tools
    organize:
      usr/bin/python3-websockify: usr/bin/websockify
  websockify-custom:
    plugin: dump
    source: ./remctrl/websockify-custom
    organize:
      '*': websockify-custom/
  x11vnc:
    plugin: nil
    stage-packages: [ x11vnc, xauth, coreutils, tigervnc-standalone-server ]
  x11vnc-scripts:
    plugin: dump
    source: ./remctrl/scripts
    organize:
      '*': scripts/

apps:
  pytty:
    command: pytty
    daemon: simple
    restart-condition: always
    plugs: [ network, network-bind, process-control ]
  logmein-host:
    command: logmein_host
    daemon: simple
    restart-condition: always
    plugs: [ network, network-bind, process-control ]
  reverse-proxy:
    command: reverse-proxy
    daemon: simple
    restart-condition: always
    plugs: [ network, network-bind ]
  novnc:
    command: websockify-custom/launch.sh --vnc localhost:23826 --listen 23825 --web "${SNAP}/noVNC-branding" --cert "${SNAP_COMMON}/self.pem"
    daemon: simple
    restart-condition: always
    environment:
        PYTHONPATH: ${PYTHONPATH}:${SNAP}/websockify-custom
        EXTRA_ARGS: --auth-plugin=ssh_auth.ssh_auth.HTTPAuthWithSsh
    plugs: [ network, network-bind, process-control ]
  novnc-login:
    command: websockify-custom/launch.sh --vnc localhost:23824 --listen 23823 --web "${SNAP}/noVNC-branding" --cert "${SNAP_COMMON}/self.pem"
    daemon: simple
    restart-condition: always
    environment:
        PYTHONPATH: ${PYTHONPATH}:${SNAP}/websockify-custom
        EXTRA_ARGS: --auth-plugin=ssh_auth.ssh_auth.HTTPAuthWithSsh --auth-source=foo:bar
    plugs: [ network, network-bind, process-control ]
  logmein-vnc:
    command: scripts/logmein-vnc.sh
    plugs: [ network, network-bind, x11 ]
